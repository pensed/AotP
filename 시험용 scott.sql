--테이블 셋팅
CREATE TABLE SINGER(
            SINGER_ID NUMBER,
            SINGER_NAME VARCHAR2(20),
            MUSIC_ID NUMBER
            );
ALTER TABLE SINGER ADD CONSTRAINT SINGER_FK FOREIGN KEY (MUSIC_ID) 
REFERENCES MUSIC(MUSIC_ID);

CREATE TABLE MUSIC(
            MUSIC_ID NUMBER,
            GENRE VARCHAR2(20)
            );


--1
SELECT AVG(NVL(COMM,0)) FROM EMP;


--2 
SELECT ENAME, TRUNC(SYSDATE)- TRUNC(HIREDATE)
FROM EMP    
WHERE HIREDATE = (SELECT MIN(HIREDATE) FROM EMP);


--3
ALTER TABLE MUSIC ADD CONSTRAINT MUSICC_PK PRIMARY KEY(MUSIC_ID);
CREATE TABLE MUSIC2(
            MUSIC_ID NUMBER,
            GENRE VARCHAR2(20)
            );
ALTER TABLE MUSIC2 ADD CONSTRAINT MUSIC_FK FOREIGN KEY (MUSIC_ID) 
REFERENCES MUSIC(MUSIC_ID);


--4
ALTER TABLE SINGER DROP CONSTRAINT SINGER_FK;

--5
SELECT A.EMPNO, A.ENAME
FROM EMP A
WHERE A.SAL = (SELECT MAX(B.SAL) FROM EMP B);

--6
SELECT A.ENAME
FROM EMP A
WHERE A.SAL > (SELECT B.SAL FROM EMP B WHERE ENAME = 'JONES');

--7
--JOB를 그룹화하지 않았기 때문이다.
SELECT JOB, MAX(SAL)
FROM EMP
WHERE JOB = 'SALESMAN';
--수정 후
SELECT JOB, MAX(SAL)
FROM EMP
WHERE JOB = 'SALESMAN' 
group by JOB;

--8
SELECT D.LOC, E.DEPTNO, COUNT(E.DEPTNO), ROUND(AVG(NVL(E.SAL,0)),0)
FROM EMP E, DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO 
GROUP BY D.LOC, E.DEPTNO;

--9
SELECT D.LOC, E.DEPTNO, COUNT(E.DEPTNO), ROUND(AVG(NVL(E.SAL,0)),0)
FROM EMP E, DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO AND E.DEPTNO > 10
GROUP BY D.LOC, E.DEPTNO;

--10
--COMMIT : 저장되지 않은 모든 데이터를 데이터베이스에 저장하고 현재의 트랜잭션을 종료하라는 명령어이다.
--SAVEPOINT : 현재까지의 트랜잭션을 특정 이름으로 지정하라는 명령어이다.
--ROLLBACK : 저장되지 않은 모든 데이터 변경 사항을 취소하고 현재의 트랜잭션을 종료하는 명령어이다.

--11
--SQLPLUS
--SYSTEM
--1234
--GRANT DBA TO SCOTT;

--12
--데이터 베이스의 데이터 사전에서 테이블 이름과 테이블 스페이스 이름을 검색하는 명령어를 작성하시오.
SELECT * FROM ALL_TABLES;
SELECT * FROM ALL_INDEXES;
SELECT * FROM ALL_VIEWS;
